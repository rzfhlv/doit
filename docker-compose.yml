version: '3.9'

services:
  app:
    container_name: doit-app
    build:
      dockerfile: Dockerfile
      context: .
      args:
       - APP_PORT="${APP_PORT}"
    ports:
      - "${APP_PORT}:8090"
    environment:
      APP_NAME: ${APP_NAME}
      DB_HOST: postgres
      DB_DRIVER: postgres
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: 5432
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    restart: on-failure
    depends_on:
      - postgres
      - mongo
      - redis
    networks:
      - doit

  postgres:
    container_name: doit-postgres
    image: postgres:15.4-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - ~/data/db/postgres/doit:/var/lib/postgresql/data
    networks:
      - doit
  
  adminer:
    container_name: doit-adminer
    image: adminer:4.8.0-standalone
    restart: always
    ports:
      - "8181:8080"
    networks:
      - doit

  mongo:
    container_name: doit-mongo
    image: mongo:5.0-focal
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ~/data/db/mongodb/doit:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    networks:
      - doit

  redis:
    container_name: doit-redis
    image: redis:6.2-alpine
    restart: always
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ~/data/db/redis/doit:/data
    networks:
      - doit

networks:
  doit:
    driver: bridge
